// Code generated by qtc from "profile.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line templates/profile.qtpl:1
package templates

//line templates/profile.qtpl:1
import "github.com/tasselsd/gorum/pkg/core"

//line templates/profile.qtpl:4
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/profile.qtpl:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/profile.qtpl:5
type ProfilePage struct {
	DefaultPage
	User *core.User
}

//line templates/profile.qtpl:10
func (p *ProfilePage) StreamBody(qw422016 *qt422016.Writer) {
//line templates/profile.qtpl:10
	qw422016.N().S(`<style>#profile-header {line-height: 64px;padding: 10px}.profile-avatar {width: 64px;height: 64px;float: left;border-radius: 50%}.profile-username {font-size: 20px;margin: 0 0 0 85px;display: block;}.signout-btn {float: right;}</style><header id="profile-header">`)
//line templates/profile.qtpl:20
	if p.Session != nil {
//line templates/profile.qtpl:20
		qw422016.N().S(`<a class="signout-btn" href="/signout">退出登录</a>`)
//line templates/profile.qtpl:22
	}
//line templates/profile.qtpl:22
	qw422016.N().S(`<img class="profile-avatar" src="`)
//line templates/profile.qtpl:23
	qw422016.E().S(p.User.Avatar)
//line templates/profile.qtpl:23
	qw422016.N().S(`" /><span class="profile-username">`)
//line templates/profile.qtpl:23
	qw422016.E().S(p.User.Name)
//line templates/profile.qtpl:23
	qw422016.N().S(`</span></header>`)
//line templates/profile.qtpl:25
}

//line templates/profile.qtpl:25
func (p *ProfilePage) WriteBody(qq422016 qtio422016.Writer) {
//line templates/profile.qtpl:25
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/profile.qtpl:25
	p.StreamBody(qw422016)
//line templates/profile.qtpl:25
	qt422016.ReleaseWriter(qw422016)
//line templates/profile.qtpl:25
}

//line templates/profile.qtpl:25
func (p *ProfilePage) Body() string {
//line templates/profile.qtpl:25
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/profile.qtpl:25
	p.WriteBody(qb422016)
//line templates/profile.qtpl:25
	qs422016 := string(qb422016.B)
//line templates/profile.qtpl:25
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/profile.qtpl:25
	return qs422016
//line templates/profile.qtpl:25
}

//line templates/profile.qtpl:26
func (p *ProfilePage) StreamTitle(qw422016 *qt422016.Writer) {
//line templates/profile.qtpl:27
	qw422016.E().S(p.User.Name)
//line templates/profile.qtpl:27
	qw422016.N().S(`的主页`)
//line templates/profile.qtpl:28
}

//line templates/profile.qtpl:28
func (p *ProfilePage) WriteTitle(qq422016 qtio422016.Writer) {
//line templates/profile.qtpl:28
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/profile.qtpl:28
	p.StreamTitle(qw422016)
//line templates/profile.qtpl:28
	qt422016.ReleaseWriter(qw422016)
//line templates/profile.qtpl:28
}

//line templates/profile.qtpl:28
func (p *ProfilePage) Title() string {
//line templates/profile.qtpl:28
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/profile.qtpl:28
	p.WriteTitle(qb422016)
//line templates/profile.qtpl:28
	qs422016 := string(qb422016.B)
//line templates/profile.qtpl:28
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/profile.qtpl:28
	return qs422016
//line templates/profile.qtpl:28
}
